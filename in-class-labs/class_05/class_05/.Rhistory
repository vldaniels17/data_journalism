knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# Load the Tidyverse family of packages below. Remember: if this is the first time you've used this package on this computer, you'll have to install it first with install.packages()
# install.packages('tidyverse')
library(tidyverse)
# Load data and store it as an object called logan
logan <- read_tsv("arcos-wv-logan-54045-itemized.tsv")
# Load data and store it as an object called logan
logan <- read_tsv("data/arcos-wv-logan-54045-itemized.tsv")
View(logan)
glimpse(logan)
View(logan)
glimpse(logan)
summary(logan)
# Take the mingo dataframe, AND THEN select only the columns we want AND THEN sort is highest to lowest by dosage unit AND THEN filter for transactions with 12,000 or more pills.
mingo_rearranged_sorted_filtered <- logan %>%
select(Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT) %>%
arrange(desc(DOSAGE_UNIT)) %>%
filter(DOSAGE_UNIT >= 12000)
# Look at it. If you want to pop this out in the viewer, just uncomment next line.
# View(mingo_rearranged_sorted)
# Print in console below
print(mingo_rearranged_sorted_filtered)
# Take the mingo dataframe, AND THEN select only the columns we want AND THEN sort is highest to lowest by dosage unit AND THEN filter for transactions with 12,000 or more pills. We're not storing it as an object. It will automatically print below.
mingo %>%
select(Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT) %>%
arrange(desc(DOSAGE_UNIT)) %>%
filter(DOSAGE_UNIT >= 12000)
# Take the mingo dataframe, AND THEN select only the columns we want AND THEN sort is highest to lowest by dosage unit AND THEN filter for transactions with 12,000 or more pills. We're not storing it as an object. It will automatically print below.
logan %>%
select(Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT) %>%
arrange(desc(DOSAGE_UNIT)) %>%
filter(DOSAGE_UNIT >= 12000)
# Take the mingo dataframe, AND THEN select only the columns we want AND THEN sort is highest to lowest by dosage unit AND THEN filter for transactions with 12,000 or more pills. We're not storing it as an object. It will automatically print below.
logan %>%
select(Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT) %>%
arrange(desc(DOSAGE_UNIT)) %>%
filter(DOSAGE_UNIT >= 15000)
# Load the Tidyverse family of packages below. Remember: if this is the first time you've used this package on this computer, you'll have to install it first with install.packages()
# install.packages('tidyverse')
library(tidyverse)
# Load data and store it as an object called logan
logan <- read_tsv("data/arcos-wv-logan-54045-itemized.tsv")
View(logan)
# Get all columns except for REPORTER_DEA_NO, REPORTER_BUS_ACT
logan_pipeline <- select(logan, Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT)
# Look at it
View(logan_pipeline)
# Also print it in our R markdown file below our codeblock
print(logan_pipeline)
glimpse(logan)
# Get all columns except for REPORTER_DEA_NO, REPORTER_BUS_ACT
logan_all_but_four <- select(-REPORTER_DEA_NO, -REPORTER_BUS_ACT, -REPORTER_NAME, -REPORTER_ADDL_CO_INFO)
# Get all columns except for REPORTER_DEA_NO, REPORTER_BUS_ACT
logan_all_but_four <- select(logan, -REPORTER_DEA_NO, -REPORTER_BUS_ACT, -REPORTER_NAME, -REPORTER_ADDL_CO_INFO)
# Look at it
View(logan_all_but_four)
# Also print it in our R markdown file below our codeblock
print(logan_all_but_four)
# Get all columns except for REPORTER_DEA_NO, REPORTER_BUS_ACT
logan_buyer <- select(logan, contains("BUYER"))
# Look at it
View(logan_buyer)
# Also print it in our R markdown file below our codeblock
print(logan_buyer)
rm(-logan)
# Get all columns that contain "BUYER"
rm(logan_all_but_four)
rm(list=ls("logan"))
# ...remove all but logan
rm(list=ls(logan))
rm(list=setdiff(ls(), "logan"))
# Take the mingo dataframe, AND THEN select only the columns we want AND THEN sort is highest to lowest by dosage unit.
logan_pipeline_sorted <- logan %>%
select(Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT) %>%
arrange(Combined_Labeler_Name)
# Look at it. If you want to pop this out in the viewer, just uncomment next line.
# View(mingo_rearranged_sorted)
# Print in console below
print(logan_pipeline_sorted)
# Take the logan dataframe, AND THEN select only the columns we want AND THEN sort it highest to lowest by dosage unit.
logan_pipeline_sorted <- logan %>%
select(Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT) %>%
arrange(desc(Combined_Labeler_Name))
# Look at it. If you want to pop this out in the viewer, just uncomment next line.
View(logan_pipeline_sorted)
# Print in console below
print(logan_pipeline_sorted)
# Take the logan dataframe, AND THEN select only the columns we want AND THEN sort it highest to lowest by number of pills and only returns transactions with 15K or more pills.
logan %>%
select(Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT) %>%
arrange(desc(Combined_Labeler_Name)) %>%
filter(DOSAGE_UNIT >= 15000)
# Take the logan dataframe, AND THEN select only the columns we want AND THEN sort it highest to lowest by number of pills and only returns transactions with 15K or more pills.
logan %>%
select(Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT) %>%
arrange(desc(DOSAGE_UNIT)) %>%
filter(DOSAGE_UNIT >= 15000)
# Take the logan dataframe, AND THEN select only the columns we want AND THEN sort it highest to lowest by number of pills and only returns transactions with 15K or more pills and only pills distributed by McKesson
logan %>%
select(Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT) %>%
arrange(desc(DOSAGE_UNIT)) %>%
filter(DOSAGE_UNIT >= 15000, REPORTER_NAME == "MCKESSON CORPORATION")
# Take the logan dataframe, AND THEN select only the columns we want AND THEN sort it highest to lowest by number of pills and only returns transactions with 15K or more pills and only pills distributed by McKesson
logan %>%
select(Combined_Labeler_Name, REPORTER_NAME, BUYER_NAME, DOSAGE_UNIT) %>%
arrange(desc(DOSAGE_UNIT)) %>%
filter(DOSAGE_UNIT >= 15000, REPORTER_NAME == "MCKESSON CORPORATION", str_detect(BUYER_NAME, "ARACOMA"))
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE, paged.print=TRUE)
# If you don't have one or both of these these, use install.packages()
library(tidyverse)
library(janitor)
# Load data and store it as an object called logan
baltimore <- read_tsv("data/arcos-wv-baltimore-24510-itemized.tsv")
# Load data and store it as an object called logan
baltimore <- read_tsv("data/arcos-wv-baltimore-city-24510-itemized.tsv")
# Load data and store it as an object called logan
baltimore <- read_tsv("data/arcos-md-baltimore-city-24510-itemized.tsv")
View(baltimore)
# Code to glimpse
glimpse(baltimore)
# 65,359 rows (or observations or obs), 42 columns (or variables)
# The ZIP code columns could easily be stored as character data, because it would be silly to do math on them. Readr saw all digits in that column and guessed that we wanted it to be a number.  In fact, this probably created problems.  Look at the first record for REPORTER_ZIP. That's a distributor in Carlstadt, NJ.  The ZIP Code there is 07072.  But by storing it as a number, R cut off the first zero.  Later on, we'll get into how to tell R to read in certain columns as characters or numbers. Drug code is another example of something we don't need to do math on, so it probably should be stored as a character.
# Transaction Date is a good example of column that is stored as a character, but should really be stored as a date.  We'll learn how to do that in future assignments.
# Missing values appear to have been coded as the word "null".  In some cases, missing values will be stored as literally a missing value -- instead of "null" you'll have "".  More common is NA, which is a hidden character indicating a missing value.
baltimore %>%
group_by(buyer_name) %>%
summarise(shipments = n())
baltimore <- clean_names(baltimore)
baltimore %>%
group_by(buyer_name) %>%
summarise(shipments = n())
baltimore %>%
group_by(buyer_name) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
group_by(buyer_name, buyer_address1) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
group_by(buyer_name, buyer_address1, buyer_zip) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
group_by(reporter_name, reporter_state, reporter_zip) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
group_by(reporter_name) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
group_by(reporter_name, reporter_state) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
group_by(reporter_name) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
filter(reporter_name == "MCKESSON CORPORATION") %>%
group_by(reporter_name) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
filter(reporter_name == "MCKESSON CORPORATION") %>%
group_by(buyer_name) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
filter(reporter_name == "MCKESSON CORPORATION") %>%
group_by(buyer_name, buyer_address1) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
filter(reporter_name == "MCKESSON CORPORATION") %>%
group_by(buyer_name, buyer_address1, buyer_address2) %>%
summarise(total_pills = sum(dosage_unit)) %>%
arrange(desc(total_pills))
baltimore %>%
filter(reporter_name == "MCKESSON CORPORATION") %>%
group_by(buyer_name, buyer_address1, buyer_address2) %>%
summarise(total_shipments = n()) %>%
arrange(desc(total_pills))
baltimore %>%
filter(reporter_name == "MCKESSON CORPORATION") %>%
group_by(buyer_name, buyer_address1, buyer_address2) %>%
summarise(total_shipments = n()) %>%
arrange(desc(total-shipments))
baltimore %>%
filter(reporter_name == "MCKESSON CORPORATION") %>%
group_by(buyer_name, buyer_address1, buyer_address2) %>%
summarise(total_shipments = n()) %>%
arrange(desc(total_shipments))
baltimore %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = round(((pills_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_pills))
baltimore %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = round(((pills_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_pills)) %>%
filter(str_detect(buyer_name, "R"))
# Rite-Aid of Maryland, Inc., 12.52 percent, 16.7 million pills out of 133.7 million pills sent to whole city.
baltimore %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = round(((pills_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_pills)) %>%
filter(str_detect(buyer_name, "Ri"))
# Rite-Aid of Maryland, Inc., 12.52 percent, 16.7 million pills out of 133.7 million pills sent to whole city.
baltimore %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = round(((pills_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_pills)) %>%
filter(str_detect(buyer_name, "RI"))
# Rite-Aid of Maryland, Inc., 12.52 percent, 16.7 million pills out of 133.7 million pills sent to whole city.
baltimore %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = round(((pills_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_pills)) %>%
filter(str_detect(buyer_name, "RIT"))
# Rite-Aid of Maryland, Inc., 12.52 percent, 16.7 million pills out of 133.7 million pills sent to whole city.
baltimore %>%
group_by(buyer_name) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = round(((pills_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_pills)) %>%
filter(str_detect(buyer_name, "RITE"))
# Rite-Aid of Maryland, Inc., 12.52 percent, 16.7 million pills out of 133.7 million pills sent to whole city.
baltimore_working <- baltimore %>%
mutate(rite_aid_y_n = case_when(
str_detect(buyer_name, "RITE") ~ "rite_aid_y",
TRUE ~ "rite_aid_n"
)) %>%
group_by(rite_aid_y_n) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = round(((pills_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_pills))
baltimore %>%
mutate(rite_aid_y_n = case_when(
str_detect(buyer_name, "RITE") ~ "rite_aid_y",
TRUE ~ "rite_aid_n"
)) %>%
group_by(rite_aid_y_n) %>%
summarise(pills_per_pharmacy = sum(dosage_unit)) %>%
mutate(total_pills = sum(pills_per_pharmacy)) %>%
mutate(pharmacy_percent_total_pills = round(((pills_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_pills))
baltimore %>%
mutate(rite_aid_y_n = case_when(
str_detect(buyer_name, "RITE") ~ "rite_aid_y",
TRUE ~ "rite_aid_n"
)) %>%
group_by(rite_aid_y_n) %>%
summarise(shipments_per_pharmacy = n()) %>%
mutate(total_pills = sum(shipments_per_pharmacy)) %>%
mutate(pharmacy_percent_total_shipments = round(((shipments_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_pills))
baltimore %>%
mutate(rite_aid_y_n = case_when(
str_detect(buyer_name, "RITE") ~ "rite_aid_y",
TRUE ~ "rite_aid_n"
)) %>%
group_by(rite_aid_y_n) %>%
summarise(shipments_per_pharmacy = n()) %>%
mutate(total_pills = sum(shipments_per_pharmacy)) %>%
mutate(pharmacy_percent_total_shipments = round(((shipments_per_pharmacy/total_pills)*100),2)) %>%
arrange(desc(pharmacy_percent_total_shipments))
baltimore %>%
mutate(rite_aid_y_n = case_when(
str_detect(buyer_name, "RITE") ~ "rite_aid_y",
TRUE ~ "rite_aid_n"
)) %>%
group_by(rite_aid_y_n) %>%
summarise(shipments_per_pharmacy = n()) %>%
mutate(total_shipments = sum(shipments_per_pharmacy)) %>%
mutate(pharmacy_percent_total_shipments = round(((shipments_per_pharmacy/total_shipments)*100),2)) %>%
arrange(desc(pharmacy_percent_total_shipments))
baltimore %>%
ilter(drug_name == "HYDROCODONE") %>%
group_by(buyer_name) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(max_pills_in_shipment))
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
group_by(buyer_name) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(max_pills_in_shipment))
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
group_by(buyer_name) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(shipments))
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
group_by(combined_labeler_name, reporter_name, buyer_name) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(shipments))
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
mutate(pipeline = paste0(combined_labeler_name, " ",reporter_name," ",buyer_name)) %>%
group_by(pipeline) %>%
mutate()
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(shipments))
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
mutate(pipeline = paste0(combined_labeler_name, " ",reporter_name," ",buyer_name)) %>%
group_by(pipeline) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(shipments))
#
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
mutate(pipeline = paste0(combined_labeler_name, "--",reporter_name,"--",buyer_name)) %>%
group_by(pipeline) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(shipments))
#
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
mutate(pipeline = paste0(combined_labeler_name, "--",reporter_name,"--",buyer_name)) %>%
group_by(pipeline) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(total_pills))
# Shipments: SpecGx LLC--RITE AID MID-ATLANTIC--RITE AID OF MARYLAND, INC.	9087
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
mutate(pipeline = paste0(combined_labeler_name, "--",reporter_name,"--",buyer_name)) %>%
group_by(pipeline) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(avg_pills_per_shipment))
# Shipments: SpecGx LLC--RITE AID MID-ATLANTIC--RITE AID OF MARYLAND, INC.	9087
# Shipments: SpecGx LLC--RITE AID MID-ATLANTIC--RITE AID OF MARYLAND, INC.	2482900
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
mutate(pipeline = paste0(combined_labeler_name, "--",reporter_name,"--",buyer_name)) %>%
group_by(pipeline) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(avg_pills_per_shipment))
# Shipments: SpecGx LLC--RITE AID MID-ATLANTIC--RITE AID OF MARYLAND, INC.	9087
# Total Pills: SpecGx LLC--RITE AID MID-ATLANTIC--RITE AID OF MARYLAND, INC.	2482900
# Avg Pills Per Shipment: Actavis Pharma, Inc.--CARDINAL HEALTH--NEWCARE HOME HEALTH SERVICES14285.0746
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
mutate(pipeline = paste0(combined_labeler_name, "--",reporter_name,"--",buyer_name)) %>%
group_by(pipeline) %>%
summarise(shipments = n(),
total_pills = sum(dosage_unit),
avg_pills_per_shipment = mean(dosage_unit),
min_pills_in_shipment = min(dosage_unit),
max_pills_in_shipment = max(dosage_unit)
) %>%
arrange(desc(max_pills_in_shipment))
# Shipments: SpecGx LLC--RITE AID MID-ATLANTIC--RITE AID OF MARYLAND, INC.	9087
# Total Pills: SpecGx LLC--RITE AID MID-ATLANTIC--RITE AID OF MARYLAND, INC.	2482900
# Avg Pills Per Shipment: Actavis Pharma, Inc.--CARDINAL HEALTH--NEWCARE HOME HEALTH SERVICES 14285.0746
baltimore %>%
filter(dosage_unit >= 30000)
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
filter(dosage_unit >= 30000)
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
filter(dosage_unit >= 30000) %>%
mutate(pipeline = paste0(combined_labeler_name, "--",reporter_name,"--",buyer_name)) %>%
select(pipeline, transaction_date, dosage_unit, everything())
baltimore %>%
filter(drug_name == "HYDROCODONE") %>%
filter(dosage_unit == 48000) %>%
mutate(pipeline = paste0(combined_labeler_name, "--",reporter_name,"--",buyer_name)) %>%
select(pipeline, transaction_date, dosage_unit, everything())
